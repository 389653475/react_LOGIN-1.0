{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\n\nvar _jsxFileName = \"D:\\\\untitled1\\\\src\\\\Work\\\\Contest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PubSub from 'pubsub-js';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contest() {\n  _s();\n\n  function dateFunction(time) {\n    var zoneDate = new Date(time).toJSON();\n    return new Date(+new Date(zoneDate) + 8 * 3600 * 1000).toISOString().replace(/T/g, ' ').replace(/\\.[\\d]{3}Z/, '');\n  }\n\n  const columns = [{\n    title: '名字',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: '留言时间',\n    dataIndex: 'time',\n    key: 'time'\n  }, {\n    title: '留言内容',\n    dataIndex: 'content',\n    key: 'content'\n  }];\n  const [data, setData] = React.useState([]);\n  const [sum, setSum] = React.useState(0);\n  useEffect(() => {\n    console.log('生命周期钩子调用');\n    axios.get(`http://127.0.0.1:8000/mysql`).then(response => {\n      response.data.map(item => {\n        item.time = dateFunction(item.time);\n      });\n      setData(response.data);\n    }, error => {\n      console.log('失败了', error);\n    });\n    PubSub.subscribe('table', (a, table_data) => {\n      //对于订阅的消息传入之后进行重新渲染\n      setSum(1);\n    });\n  }, [sum]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Table, {\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Contest, \"9Af/lL9k2wZ3tMBDpzArytsIlV0=\");\n\n_c = Contest;\nexport default Contest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contest\");","map":{"version":3,"sources":["D:/untitled1/src/Work/Contest.js"],"names":["React","useEffect","PubSub","axios","Contest","dateFunction","time","zoneDate","Date","toJSON","toISOString","replace","columns","title","dataIndex","key","data","setData","useState","sum","setSum","console","log","get","then","response","map","item","error","subscribe","a","table_data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,WAASC,YAAT,CAAsBC,IAAtB,EAA2B;AAC9B,QAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,IAAT,EAAeG,MAAf,EAAf;AACA,WAAO,IAAID,IAAJ,CAAS,CAAC,IAAIA,IAAJ,CAASD,QAAT,CAAD,GAAoB,IAAE,IAAF,GAAO,IAApC,EAA0CG,WAA1C,GAAwDC,OAAxD,CAAgE,IAAhE,EAAqE,GAArE,EAA0EA,OAA1E,CAAkF,YAAlF,EAA+F,EAA/F,CAAP;AACI;;AACD,QAAMC,OAAO,GAAG,CACZ;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,SAAS,EAAE,MAA1B;AAAkCC,IAAAA,GAAG,EAAE;AAAvC,GADY,EAEZ;AAAEF,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,SAAS,EAAE,MAA5B;AAAoCC,IAAAA,GAAG,EAAE;AAAzC,GAFY,EAGZ;AAAEF,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,SAAS,EAAE,SAA5B;AAAuCC,IAAAA,GAAG,EAAE;AAA5C,GAHY,CAAhB;AAKA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBjB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAAvB;AACA,QAAM,CAACC,GAAD,EAAKC,MAAL,IAAapB,KAAK,CAACkB,QAAN,CAAe,CAAf,CAAnB;AAEAjB,EAAAA,SAAS,CAAC,MAAI;AACVoB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAnB,IAAAA,KAAK,CAACoB,GAAN,CAAW,6BAAX,EAA0CC,IAA1C,CACIC,QAAQ,IAAI;AACRA,MAAAA,QAAQ,CAACT,IAAT,CAAcU,GAAd,CAAmBC,IAAD,IAAQ;AACtBA,QAAAA,IAAI,CAACrB,IAAL,GAAYD,YAAY,CAACsB,IAAI,CAACrB,IAAN,CAAxB;AACH,OAFD;AAGAW,MAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAV,CAAP;AACH,KANL,EAOIY,KAAK,IAAI;AAACP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBM,KAAlB;AAA0B,KAPxC;AASA1B,IAAAA,MAAM,CAAC2B,SAAP,CAAiB,OAAjB,EAAyB,CAACC,CAAD,EAAGC,UAAH,KAAgB;AAAC;AACtCX,MAAAA,MAAM,CAAC,CAAD,CAAN;AACH,KAFD;AAGH,GAdQ,EAcP,CAACD,GAAD,CAdO,CAAT;AAgBA,sBACI;AAAA,2BACI;AACI,MAAA,OAAO,EAAEP,OADb;AAEI,MAAA,UAAU,EAAEI;AAFhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArCQZ,O;;KAAAA,O;AAsCT,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {Table} from \"antd\";\r\nimport PubSub from 'pubsub-js'\r\nimport axios from \"axios\";\r\n\r\nfunction Contest() {\r\n    function dateFunction(time){\r\n\tvar zoneDate = new Date(time).toJSON();\r\n\treturn new Date(+new Date(zoneDate)+8*3600*1000).toISOString().replace(/T/g,' ').replace(/\\.[\\d]{3}Z/,'');\r\n    }\r\n    const columns = [\r\n        { title: '名字', dataIndex: 'name', key: 'name' },\r\n        { title: '留言时间', dataIndex: 'time', key: 'time' },\r\n        { title: '留言内容', dataIndex: 'content', key: 'content' },\r\n    ];\r\n    const [data,setData] = React.useState([]);\r\n    const [sum,setSum]=React.useState(0)\r\n\r\n    useEffect(()=>{\r\n        console.log('生命周期钩子调用');\r\n        axios.get(`http://127.0.0.1:8000/mysql`,).then(\r\n            response => {\r\n                response.data.map((item)=>{\r\n                    item.time = dateFunction(item.time)\r\n                })\r\n                setData(response.data)\r\n            },\r\n            error => {console.log('失败了',error);}\r\n        )\r\n        PubSub.subscribe('table',(a,table_data)=>{//对于订阅的消息传入之后进行重新渲染\r\n            setSum(1)\r\n        })\r\n    },[sum])\r\n\r\n    return(\r\n        <div>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={data}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Contest"]},"metadata":{},"sourceType":"module"}